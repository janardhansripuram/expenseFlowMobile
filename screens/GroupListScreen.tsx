import React, { useEffect, useState } from 'react';
import { View, Text, FlatList, StyleSheet, TouchableOpacity } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { auth } from '../config/firebaseConfig';
import { fetchGroups, Group } from '../services/groupService';

const GroupListScreen: React.FC = () => {
  // State to hold the list of groups
  const [groups, setGroups] = useState<Group[]>([]);
  const [loading, setLoading] = useState(true);
  const navigation = useNavigation();
  const currentUser = auth.currentUser;

  const handleAddGroupPress = () => {
    // Corrected navigation call
    console.log('Navigating to Add Group Screen');
  };

  useEffect(() => {
    if (!currentUser) {
      setLoading(false);
      return;
    }

    const loadGroups = async () => {
      try {
        const userGroups = await fetchGroups(currentUser.uid);
        setGroups(userGroups);
      } catch (error) {
        console.error('Error fetching groups:', error);
      } finally {
        setLoading(false);
      }
    };

    loadGroups();
  }, [currentUser]);

  if (loading) {
    return (
      <View style={styles.container}>
        <Text>Loading groups...</Text>
      </View>
    );
  }

  const renderGroupItem = ({ item }: { item: Group }) => (
    <TouchableOpacity
      style={styles.groupItem}
      // Navigate to Group Details screen on press, passing the group data
      onPress={() => {
        console.log('Navigate to Group Details for:', item.name);
      }}
    >
      <Text style={styles.groupName}>{item.name}</Text>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <Text style={styles.title}>My Groups</Text>
      {groups.length === 0 ? (
        <Text>No groups found. Create one!</Text>
      ) : (
        <FlatList
          data={groups}
          renderItem={renderGroupItem}
          keyExtractor={(item) => item.id || item.name} // Use ID if available, otherwise name (assuming ID is generated by Firestore)
        />
      )}
      {/* Add button to navigate to Add Group Screen (to be created) */}
      <TouchableOpacity
        style={styles.addButton}
        onPress={handleAddGroupPress}
        onPress={() => {
        }}
      >
        <Text style={styles.addButtonText}>Add Group</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: '#f8f8f8', // Light grey background
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 16,
    textAlign: 'center',
    color: '#333',
  },
  groupItem: {
    backgroundColor: '#fff', // White background for items
    padding: 16,
    marginBottom: 12,
    borderRadius: 8,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  groupName: {
    fontSize: 18,
    color: '#333',
  },
  addButton: {
    backgroundColor: '#FF6B35', // Orange button color
    padding: 15,
    borderRadius: 8,
    alignItems: 'center',
    marginTop: 20,
  },
  addButtonText: {
    color: '#fff',
    fontSize: 18,
    fontWeight: 'bold',
  },
});

export default GroupListScreen;